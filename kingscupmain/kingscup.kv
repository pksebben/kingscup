
<MainMenu>:

    BoxLayout:
        orientation: 'vertical'
        canvas:
            Color:
                rgb: [1,1,1,1]
            Rectangle:
                size: self.size
                pos: self.pos
        AnchorLayout:
            anchor_y: 'top'
            id: titlepage
            canvas:
                Color:
                    rgb:[1,1,1,1]
                Rectangle:
                    size: self.size[0], (self.size[0] / 2)
                    pos: self.pos
                    source: 'kingslogo.png'
                    
        BoxLayout:
            id: menuoptions
            orientation: 'horizontal'
            canvas:
                Color:
                    rgb: [1,1,1,1]
                Rectangle:
                    size:self.size
                    pos:self.pos
                    
            MeatButt:
                text: 'Settings'
                font_size: 18
                on_press: root.settingsbutt()
                
            MeatButt:
                text: 'Start Game'
                font_size: 18
                on_press: root.startbutt()


<GameScreen>:
    color: [0.001,0.5,0.75,1]
    font_size: 14
    bold: True
    
    BoxLayout:
        orientation: 'vertical'
        canvas:
            Color:
                rgb: [1,1,1,1]
            Rectangle:
                size: self.size
                pos: self.pos
                
        BoxLayout:
            orientation: 'vertical'
            id: topbar
            
            MeatText:
                size_hint_y: 0.1
                text: 'current player'
                
            BoxLayout:
                orientation: 'vertical'

                canvas.before:
                    Color:
                        rgb: [1,0.78,0,0.37,0.5]
                    Ellipse:
                        pos: [((self.size[0] / 2) - (topbar.size[0] * 0.15)), ((self.size[1] / 2) - (topbar.size[0] * 0.15))]
                        size: [topbar.size[0] * 0.3, topbar.size[0] * 0.3]

                canvas:
                    Color:
                        rgb: [1,1,1,1]
                    Ellipse:
                        pos: [((self.size[0] / 2) - (topbar.size[0] * 0.075)), ((self.size[1] / 2) - (topbar.size[0] * 0.075))]
                        size: [topbar.size[0] * 0.15, topbar.size[0] * 0.15]
                    Ellipse:
                        id: playertag
                        angle_start: 0
                        angle_end: 45
                        pos: [((self.size[0] / 2) - (topbar.size[0] * 0.15)), ((self.size[1] / 2) - (topbar.size[0] * 0.15))]
                        size: [topbar.size[0] * 0.3, topbar.size[0] * 0.3]

                MeatText:
                    id: cardname
                    size_hint_y: 0.1
                    text: 'card name'
                    on_text: rulename.text = root.grp(card = str(root.deck.drawpile[0][0]))

                MeatText:
                    id: rulename
                    size_hint_y: 0.1
                    text: 'rule name'
                    on_text: ruledesc.text = root.getrule(self.text)

                MeatText:
                    id: ruledesc
                    text: 'rulesgohere rulesgohere rulesgohere rulesgohere rulesgohere rulesgohere rulesgohere rulesgohere rulesgohererulesgohererulesgohererulesgohererulesgohererulesgohere'
                    text_size: (self.size[0] *0.9,self.size[1] * 0.9)
                    padding: 30,50
                    valign: 'middle'
                    halign: 'center'

                
        GridLayout:
            size_hint_y: 0.1
            cols: 2

            MeatButt:
                id: quit
                text: 'quit'
                size_hint_x: 0.5
                on_press: root.quitgame()
            
                
            MeatButt:
                id: drawbutt
                size_hint_x: 0.5
                text: 'draw card'
                currentcard: [1,1]
                on_press: self.currentcard = root.drawacard()
                on_press: cardname.text = root.faces[root.deck.drawpile[0][0]] + ' of ' + root.suits[root.deck.drawpile[0][1]]
                on_press: root.nextplayer()



<GameStart>:

    on_pre_enter: gt1.text = root.grp(card = '1')
    on_pre_enter: gt2.text = root.grp(card = '2')
    on_pre_enter: gt3.text = root.grp(card = '3')
    on_pre_enter: gt4.text = root.grp(card = '4')
    on_pre_enter: gt5.text = root.grp(card = '5')
    on_pre_enter: gt6.text = root.grp(card = '6')
    on_pre_enter: gt7.text = root.grp(card = '7')
    on_pre_enter: gt8.text = root.grp(card = '8')
    on_pre_enter: gt9.text = root.grp(card = '9')
    on_pre_enter: gt10.text = root.grp(card = '10')
    on_pre_enter: gt11.text = root.grp(card = '11')
    on_pre_enter: gt12.text = root.grp(card = '12')
    on_pre_enter: gt13.text = root.grp(card = '13')

    BoxLayout:
        orientation: 'vertical'
        canvas:
            Color:
                rgb: [1,1,1,1]
            Rectangle:
                size: self.size
                pos: self.pos

    GridLayout:
        cols: 2

        MeatText:
            text: 'number of players'
            size_hint_y: 0.1

        Spinner:
            id: numplayerspin
            size_hint_y: 0.1
            text: 'number of players input'
            background_color: [0,0,0,0]
            color: [0.001,0.5,0.75,1]
            font_size: 14
            bold: True
            values: ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33']
            option_cls: root.MeatSpin
            on_text: root.setplayers(int(self.text))

        MeatText:
            text: 'profile'
            size_hint_y: 0.1


        Spinner:
            text: 'profile spinner'
            size_hint_y: 0.1
            background_color: [0,0,0,0]
            color: [0.001,0.5,0.75,1]
            font_size: 14
            bold: True
            values: ['1','2','3']
            option_cls: root.MeatSpin
            on_text: root.setplayers(number = int(self.text))


        GridLayout:
            size_hint_y:0.7
            cols: 1
            MeatText:
                text: '2'
            MeatText:
                text: '3'
            MeatText:
                text: '4'
            MeatText:
                text: '5'
            MeatText:
                text: '6'
            MeatText:
                text: '7'
            MeatText:
                text: '8'
            MeatText:
                text: '9'
            MeatText:
                text: '10'
            MeatText:
                text: 'Jack'
            MeatText:
                text: 'Queen'
            MeatText:
                text: 'King'
            MeatText:
                text: 'Ace'

        GridLayout:
            size_hint_y:0.7
            cols: 1
            MeatText:
                id: gt1
                text: root.grp(card = '1')
            MeatText:
                id: gt2
                text: root.grp(card = '2')
            MeatText:
                id: gt3
                text: root.grp(card = '3')
            MeatText:
                id: gt4
                text: root.grp(card = '4')
            MeatText:
                id: gt5
                text: root.grp(card = '5')
            MeatText:
                id: gt6
                text: root.grp(card = '6')
            MeatText:
                id: gt7
                text: root.grp(card = '7')
            MeatText:
                id: gt8
                text: root.grp(card = '8')
            MeatText:
                id: gt9
                text: root.grp(card = '9')
            MeatText:
                id: gt10
                text: root.grp(card = '10')
            MeatText:
                id: gt11
                text: root.grp(card = '11')
            MeatText:
                id: gt12
                text: root.grp(card = '12')
            MeatText:
                id: gt13
                text: root.grp(card = '13')

        MeatButt:
            text: 'settings'
            size_hint_y: 0.1
            on_press: root.navsettings()

        MeatButt:
            text: 'start game'
            size_hint_y: 0.1
            on_press: root.startgame()

<PlayerScreen>:

    on_pre_enter: self.playiter = 1
    on_pre_enter: self.canvas.ask_update()

    BoxLayout:
        id:blay
        orientation: 'vertical'
        canvas:
            Color:
                rgb: [1,1,1,1]
            Rectangle:
                size: self.size
                pos: self.pos

    BoxLayout:

        orientation: 'vertical'

        canvas.before:
            Color:
                rgb: [1,0.78,0,0.37,0.5]
            Ellipse:
                pos: [((self.size[0] / 2) - (blay.size[0] * 0.15)), ((self.size[1] / 2) - (blay.size[0] * 0.15))]
                size: [blay.size[0] * 0.3, blay.size[0] * 0.3]




    GridLayout:
        cols: 1

        TextInput:
            id: nameinput

        MeatText:

            text: 'pass the phone around in the order you plan to play, and enter your names.'

        MeatText:
            id: playcount
            text: 'player %s enter your name'%root.playiter

        MeatButt:
            text: 'done'
            canvas:

                Color:
                    rgb: [1,1,1,1]
                Ellipse:
                    pos: [((self.size[0] / 2) - (blay.size[0] * 0.075)), ((self.size[1] / 2) - (blay.size[0] * 0.075))]
                    size: [blay.size[0] * 0.15, blay.size[0] * 0.15]
                Ellipse:
                    id: playertag
                    angle_start: root.rotwheel1()
                    angle_end: root.rotwheel2()
                    pos: [((self.size[0] / 2) - (blay.size[0] * 0.15)), ((self.size[1] / 2) - (blay.size[0] * 0.15))]
                    size: [blay.size[0] * 0.3, blay.size[0] * 0.3]

            on_press: playcount.text = 'player %s enter your name'%root.playiter
            on_press: self.canvas.ask_update()
            on_press: root.iterplay()
            on_press: root.enterplayer(number = root.playiter, name = nameinput.text)

<SettingsScreen>:
    
    background_color: [0,0,0,0]
    color: [0.001,0.5,0.75,1]
    font_size: 14
    bold: True
    BoxLayout:
        canvas:
            Color:
                rgb: [1,1,1,1]
            Rectangle:
                size: self.size
                pos: self.pos
                
    BoxLayout:
        orientation: 'vertical'


        canvas:
            Color:
                rgb: [1,0.9,0.3,1]
            Line:
                points: root.x + 10,(root.height * (0.55)) ,root.width - 10,(root.height * (0.55)) 
                width: 5
            Line:
                points: root.x + 10,(root.height * (0.45)) ,root.width - 10,(root.height * (0.45)) 
                width: 5
                
        
        GridLayout:
            id: marriages
            size_hint_y:0.45
            cols: 2
            MeatText:
                text: '2'
            MeatText:
                id: mt1
                text: root.grp(card = '1')
            MeatText:
                text: '3'
            MeatText:
                id: mt2
                text: root.grp(card = '2')
            MeatText:
                text: '4'
            MeatText:
                id: mt3
                text: root.grp(card = '3')
            MeatText:
                text: '5'
            MeatText:
                id: mt4
                text: root.grp(card = '4')
            MeatText:
                text: '6'
            MeatText:
                id: mt5
                text: root.grp(card = '5')
            MeatText:
                text: '7'
            MeatText:
                id: mt6
                text: root.grp(card = '6')
            MeatText:
                text: '8'
            MeatText:
                id: mt7
                text: root.grp(card = '7')
            MeatText:
                text: '9'
            MeatText:
                id: mt8
                text: root.grp(card = '8')
            MeatText:
                text: '10'
            MeatText:
                id: mt9
                text: root.grp(card = '9')
            MeatText:
                text: 'Jack'
            MeatText:
                id: mt10
                text: root.grp(card = '10')
            MeatText:
                text: 'Queen'
            MeatText:
                id: mt11
                text: root.grp(card = '11')
            MeatText:
                text: 'King'
            MeatText:
                id: mt12
                text: root.grp(card = '12')
            MeatText:
                text: 'Ace'
            MeatText:
                id: mt13
                text: root.grp(card = '13')

                
        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1,0.1)

            Spinner:
                id: cardspin
                text: 'select card'
                values: ('2','3','4','5','6','7','8','9','10','Jack','King','Queen','Ace')
                size_hint:(0.25,1)
                background_color: [0,0,0,0]
                color: [0.001,0.5,0.75,1]
                font_size: 14
                bold: True
                option_cls: root.MeatSpin
                on_text: rulespin.text = root.grp(card = root.facevalues[self.text])


            Spinner:
                id: rulespin
                text: ''
                values: root.ruleslist
                background_color: [0,0,0,0]
                color: [0.001,0.5,0.75,1]
                font_size: 14
                bold: True
                size_hint: (0.75,1)
                option_cls: root.MeatSpin
                on_text: for i in marriages.children: i.text = i.text
                on_text: ruledesc.text = root.getrule(name = self.text)
                on_text: root.srp(card = root.facevalues[cardspin.text], rule = self.text)
                on_text: mt1.text = root.grp(card = '1')
                on_text: mt2.text = root.grp(card = '2')
                on_text: mt3.text = root.grp(card = '3')
                on_text: mt4.text = root.grp(card = '4')
                on_text: mt5.text = root.grp(card = '5')
                on_text: mt6.text = root.grp(card = '6')
                on_text: mt7.text = root.grp(card = '7')
                on_text: mt8.text = root.grp(card = '8')
                on_text: mt9.text = root.grp(card = '9')
                on_text: mt10.text = root.grp(card = '10')
                on_text: mt11.text = root.grp(card = '11')
                on_text: mt12.text = root.grp(card = '12')
                on_text: mt13.text = root.grp(card = '13')


        MeatText:
            id: ruledesc
            size_hint: (1, 0.35)
            max_lines: 5
            text_size: (self.size[0] *0.9,self.size[1] * 0.9)
            valign: 'middle'
            halign: 'center'
            text: 'pick a card to view rule settings'

        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1, 0.1)

            MeatButt:
                size_hint:(0.5,1)
                text:'load settings'
                bold: True

            MeatButt:
                size_hint: (0.5,1)
                text: 'save settings'
                bold: True

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.05
            
            MeatButt:
                text: 'main menu'
                on_press: root.menubutt()

            MeatButt:
                text: 'game start'
                on_press: root.startbutt()